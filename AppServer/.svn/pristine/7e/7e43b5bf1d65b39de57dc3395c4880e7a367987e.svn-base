package com.rising.appserver.action;
import java.io.IOException; 
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.Date;
import java.util.HashMap; 
import java.util.Iterator;
import java.util.Map; 
import java.util.Random;

import javax.mail.MessagingException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;  

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.dom4j.DocumentException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.mail.javamail.MimeMailMessage;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody; 

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.rising.appserver.bean.RespError;
import com.rising.appserver.common.BaseAction;
import com.rising.appserver.common.CommonUtil;
import com.rising.appserver.service.ChargeService;
import com.rising.appserver.service.QQAgentService;
import com.alipay.config.*;
import com.alipay.util.*;
@Controller
@RequestMapping("/smsJob")
public class SmsJob extends BaseAction{
	
	@Autowired
	private JavaMailSenderImpl  mailSender; 
	
	@RequestMapping("/upNotice")
	public @ResponseBody String upNotice(HttpServletRequest request,
			HttpServletResponse response){   
		Map<String,String> params = new HashMap<String,String>();
		Map requestParams = request.getParameterMap();
		for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
			String name = (String) iter.next();
			String[] values = (String[]) requestParams.get(name);
			String valueStr = "";
			for (int i = 0; i < values.length; i++) {
				valueStr = (i == values.length - 1) ? valueStr + values[i]
						: valueStr + values[i] + ",";
			} 
			params.put(name, valueStr); 
		}
		String msg=request.getParameter("msg");
		StringBuffer paramBuffer=new StringBuffer(""); 
		String parameter=AlipayCore.createLinkString(params);
		paramBuffer.append(CommonUtil.doDateForm(new Date(), "yyyy-MM-dd HH:mm:ss"));
		paramBuffer.append("\n");
		try {
			msg = URLDecoder.decode(msg,"UTF-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		paramBuffer.append("msg:"+msg);
		paramBuffer.append("\n");
		msg=request.getParameter("msg");
		try {
			msg = new String(request.getParameter("msg").getBytes("ISO-8859-1"),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}  
		paramBuffer.append("msg:"+msg);
		paramBuffer.append("\n");
		paramBuffer.append(parameter);
		CommonUtil.appendLog("sms", paramBuffer.toString());
		return "success";
	}
	
	
	@RequestMapping("/mailNotice")
	public @ResponseBody String mailNotice(HttpServletRequest request,
			HttpServletResponse response){  
		Runnable thread=new Runnable(){

		public void run(){  
			MimeMessage mime = mailSender.createMimeMessage();
			MimeMessageHelper helper;
			
	        try {
	        	String nick = javax.mail.internet.MimeUtility.encodeText("冉思科技"); 
	            helper = new MimeMessageHelper(mime, true, "utf-8");
	            helper.setFrom(new InternetAddress(nick + " <"+mailSender.getUsername()+">"));
	            helper.setTo(new String[] {"121437479@qq.com","shaoxing8642736@126.com"});
	            helper.setCc("18757530227@139.com");
	            helper.setSubject("翼支付统计");
	            helper.setText("Dear All：\n" + "這是一封測試郵件!");
	        } catch (Exception me) {
	            me.printStackTrace();
	        }
	        mailSender.send(mime);  
			

		  } 
		};

		new Thread(thread).start(); 
		
		
		return "success";
		
	}
 
}