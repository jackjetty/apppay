package com.rising.appserver;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern; 

import javax.script.Invocable;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException; 

import org.apache.commons.httpclient.Cookie;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient; 
import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.params.HttpClientParams;
import org.apache.commons.httpclient.params.HttpMethodParams; 

import com.rising.appserver.common.CommonUtil;
import com.rising.appserver.factory.HttpFactory;
public class QPay{
	public final static String USER_AGENT_H = "User-Agent";
	public final static String USER_AGENT = "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.172 Safari/537.22";
	public final static String UTF_8 = "UTF-8"; 
	
 
	private HttpClient client ;
	private Cookie[] cookies;
	private String cookiestr; 
	public boolean isLogin = false; 
	private String pt_verifysession_v1;
	private String verifycode; 
	private String[] resultArr;
	private String qqNumber;
	private String qqPassword;
	private String login_sig;
	
	//http://check.ptlogin2.qq.com/check?regmaster=&pt_tea=1&pt_vcode=1&uin=121437479&appid=11000101&js_ver=10131&js_type=1&login_sig=PR3Yc*tGpq4w0jpqkOT3y6oiyhks68DFbSTKzETvExs5rHifr66fdJHWXCaYqhwP&u1=http%3A%2F%2Fpay.qq.com%2F&r=0.7024293746101116
	//http://ptlogin2.qq.com/login?u=121437479&verifycode=!HIN&pt_vcode_v1=0&pt_verifysession_v1=74eb1f08bb0f58fe4c3479b716113125b0712a5506019900c41de12d5fede327d90f8992ddba3e0ac4d18868675702065c0e76000aa3bbe1&p=OmQi15es5B0Z*f2TfP7p4AFreMjeIlb*s1QQZcwv2y7qTC6lgpG5yGcmI92R7QtzGIxVDigF7d0ppjkpXFgrC3Sb9BYFycS0kcNGu35GYv3tOT*BE0dHyCOnmyXShC2XyW9faC3ZVMRkuHyKaiB0qprTQdcDVtXu-mkQvE7cF0G--Pd7fN4G*Xk5TIelmjLiigP*U2IjlCkTGbnXQJ64pA__&pt_randsalt=0&ptredirect=1&u1=http%3A%2F%2Fpay.qq.com%2F&h=1&t=1&g=1&from_ui=1&ptlang=2052&action=2-9-1438907430846&js_ver=10131&js_type=1&login_sig=PR3Yc*tGpq4w0jpqkOT3y6oiyhks68DFbSTKzETvExs5rHifr66fdJHWXCaYqhwP&pt_uistyle=20&aid=11000101&
    
    
    
	public QPay( String qqNumber,String qqPassword) {
		this.qqNumber = qqNumber;
		this.qqPassword = qqPassword; 
		this.login_sig="og3pmCGRIC-uzxkGLbo29YcidNZDt1ufRjPgDJs9tTUYtkp67zrBZFdHegk*3GtY&u1";
		HttpFactory http = HttpFactory.getInstance();
		client=http.getClient();
		HttpClientParams params = client.getParams();  
		params.setContentCharset("utf-8");
	}
	
	

	
	 
	

	
	
	private boolean login() {
		StringBuffer urlBuffer=new StringBuffer("");
		urlBuffer.append("http://check.ptlogin2.qq.com/check?regmaster=&pt_tea=1&pt_vcode=1&uin=");
		urlBuffer.append(qqNumber); 
		urlBuffer.append("&appid=11000101&js_ver=10131&js_type=1&login_sig="); 
		urlBuffer.append(login_sig);
		urlBuffer.append("&u1=http%3A%2F%2Fpay.qq.com%2F&r=0.7024293746101116");
		urlBuffer.append("");
		try { 
			 GetMethod get = new GetMethod(urlBuffer.toString()); 
			 get.setRequestHeader("Referer", "http://ui.ptlogin2.qq.com/cgi-bin/login?appid=11000101&f_url=loginerroralert&link_target=top&ep=http%3A//pay.qq.com/cgi-bin/login/qqacctlogin.cgi&s_url=http%3A//pay.qq.com/&qlogin_jumpname=payjump&qlogin_param=url%3Dhttp%253A//pay.qq.com/");
			 get.setRequestHeader(USER_AGENT_H, USER_AGENT);
			 
			
			 
			 int status = client.executeMethod(get);   	
			 	
			 if (status == HttpStatus.SC_OK) { 
				String result = get.getResponseBodyAsString()  ;
				System.out.println(result);
				Pattern cellPtn = Pattern.compile("^ptui_checkVC\\((.*?)\\);$");  
				Matcher matcher = cellPtn.matcher(result ); 
				if(matcher.find()){  
					result=CommonUtil.trim(matcher.group(1));  
				}  
				
				result=result.replaceAll("'", ""); 
				resultArr = result.split(",");
				verifycode=CommonUtil.trim(resultArr[1]);
				pt_verifysession_v1=CommonUtil.trim(resultArr[3]);  
				
				this.isLogin = true;  
				return true;
			 
			} 
		} catch (Exception e) {
			//e.printStackTrace();
			String info = "【登录失败】【发生异常：" + e.getMessage() + "】";
			System.out.println(info);
			 
			return false;
		} 
		return true;
	}
	
	
	
	
	private String getQpayUrl(String password,String salt, String pt_verifysession_v1,String verifycode,String login_sig){
		
		 
		String url=""; 
		try{
			  ScriptEngineManager manager = new ScriptEngineManager();
			  ScriptEngine engine = manager.getEngineByName("javascript");  
			  FileReader  in = new FileReader ("D:/log_2.js");
			  engine.eval(in);
			  if (engine instanceof Invocable) {
			     Invocable invoke = (Invocable) engine; 
			     url = invoke.invokeFunction("getQpayUrl",password,salt,pt_verifysession_v1,verifycode, login_sig).toString();
			      
			 
			  }
		}catch(Exception ex){
			ex.printStackTrace();
			
		}
		 return url ; 
		
	} 
	
	
	public boolean ptlogin2(){ 
		 String url=getQpayUrl(qqPassword,qqNumber,  pt_verifysession_v1,  verifycode,login_sig);  
		try { 
			 GetMethod get = new GetMethod(url); 
			 get.setRequestHeader("Referer", "http://ptlogin2.qq.com/"); 
			 get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0"); 
			 get.setRequestHeader("Accept-Language", "zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3");
			 get.setRequestHeader("Accept-Encoding", "gzip, deflate");
			 get.setRequestHeader("Connection", "keep-alive"); 
			int status;
			status = client.executeMethod(get); 
			if (status == HttpStatus.SC_OK) {
				String text = get.getResponseBodyAsString();
				System.out.println(text);  
			}
	} catch (Exception e) {
		e.printStackTrace();
		String info = "【群发信息失败】" + e.getMessage();
		System.err.println(info);
	 
		return false;
	}    

		return true;
	}
	 
	public  void testPay(){
		 
		//创建GET方法的实例
		GetMethod getMethod = new GetMethod("http://pay.qq.com/ipay/index.shtml?n=3&c=ltmclub,cjclub&aid=pay.qqvip&ch=qdqb,kj");
		getMethod.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0"); 
		getMethod.setRequestHeader("Accept", "textml,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
		getMethod.setRequestHeader("Accept-Language", "zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3");
		//getMethod.setRequestHeader("Accept-Encoding", "gzip, deflate");
		getMethod.setRequestHeader("Connection", "keep-alive"); 
		//使用系统提供的默认的恢复策略
		getMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,
		new DefaultHttpMethodRetryHandler());
		//定义一个输入流
		InputStream ins = null;
		//定义文件流
		BufferedReader br =null;
		try {
		  //执行getMethod
		  int statusCode = client.executeMethod(getMethod);
		  if (statusCode != HttpStatus.SC_OK) {
		    System.err.println("方法失败: "
		       + getMethod.getStatusLine());
		   }
		   
		  //使用getResponseBodyAsStream读取页面内容，这个方法对于目标地址中有大量数据需要传输是最佳的。
		  ins = getMethod.getResponseBodyAsStream();
		  String charset = getMethod.getResponseCharSet();
		  //System.out.println(charset);
		  if(charset.toUpperCase().equals("ISO-8859-1")){
		        charset = "gbk";
		  }
		  charset="utf-8";
		  //按服务器编码字符集构建文件流，这里的CHARSET要根据实际情况设置
		  br = new BufferedReader(new InputStreamReader(ins,getMethod.getResponseCharSet()));
		  StringBuffer sbf = new StringBuffer();
		  String line = null;
		    while ((line = br.readLine()) != null)
		    {
		      sbf.append(line);
		      sbf.append("\n");
		    }
		  String result = new String(sbf.toString().getBytes(getMethod.getResponseCharSet()),charset);
		  //输出内容
		  System.out.println(result);
		  //服务器编码
		   System.out.println("服务器编码是："+getMethod.getResponseCharSet());
		} catch (HttpException e) {
		  //发生致命的异常，可能是协议不对或者返回的内容有问题
		  System.out.println("请检查您所提供的HTTP地址！");
		    e.printStackTrace();
		} catch (IOException e) {
		  //发生网络异常
		   e.printStackTrace();
		} finally {
		  //关闭流，释放连接    
		} 
 
	}
	//说明QQ服务器没有存放你的IP地址，但是在你的机器里存放cookies（而不同的浏览器或客户端，其cookies不同），然后根据cookies来判断你是否初来咋到的…
	
	//服务器端又向响应头中写入了几个cookie值，而其中有些值（pt2gguin，uin，skey，ptcz）在第三次用到了，接着第三次服务器端再次向响应头中写入了几个cookie值（mb_june），最后带上这几个cookie整个页面跳转，这才登录成功。
	public void goPayHome(){
	 //http://pay.qq.com/ipay/index.shtml?n=3&c=ltmclub,cjclub&aid=pay.qqvip&ch=qdqb,kj
		 String url="http://pay.qq.com/";   
			try { 
				 GetMethod get = new GetMethod(url);   
				 get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0"); 
				 get.setRequestHeader("Accept", "textml,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
				 get.setRequestHeader("Accept-Language", "zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3");
				  
				 get.setRequestHeader("Connection", "keep-alive"); 
				 //get.addRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");
				 
				//使用系统提供的默认的恢复策略
					get.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler());
					//定义一个输入流
					InputStream ins = null;
					//定义文件流
					BufferedReader br =null;
					 
					  int statusCode = client.executeMethod(get);
					  if (statusCode != HttpStatus.SC_OK) {
					    System.err.println("方法失败: " + get.getStatusLine());
					   }
					   
					  //使用getResponseBodyAsStream读取页面内容，这个方法对于目标地址中有大量数据需要传输是最佳的。
					  ins = get.getResponseBodyAsStream();
					  String charset = get.getResponseCharSet();
					  //System.out.println(charset);
					  if(charset.toUpperCase().equals("ISO-8859-1")){
					        charset = "gbk";
					  }
					  charset="utf-8";
					  //按服务器编码字符集构建文件流，这里的CHARSET要根据实际情况设置
					  br = new BufferedReader(new InputStreamReader(ins,get.getResponseCharSet()));
					  StringBuffer sbf = new StringBuffer();
					  String line = null;
					    while ((line = br.readLine()) != null)
					    {
					      sbf.append(line);
					      sbf.append("\n");
					    }
					  String result = new String(sbf.toString().getBytes(get.getResponseCharSet()),charset);
					  //输出内容
					  System.out.println(result);
					  br.close();
				 
					  this.cookies = client.getState().getCookies();
						StringBuffer cookie = new StringBuffer();
						for (Cookie c : client.getState().getCookies()) {
							
							System.out.println(c.getName()+"    "+c.getValue());
							 
							
							
						}
						 
				 
				 
					
				 
		} catch (Exception e) {
			e.printStackTrace();
			String info = "【群发信息失败】" + e.getMessage();
			System.err.println(info); 
		 
		}   	 
		
	} 
	
	
	
	
	
	
	
	public static void main(String [] args){
		QPay qPay=new QPay( "494180070","15868453501");
		 qPay.login();
		 qPay.ptlogin2();
		  qPay. goPayHome();
		  //qPay.testPay();
	}
}